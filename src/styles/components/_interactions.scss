// Interaction Styles
// Advanced interaction effects and animations

// Click-to-expand animations
[data-expandable] {
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  &:focus {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
  }
  
  &[aria-expanded="false"] {
    .expand-content {
      max-height: 0;
      opacity: 0;
      transform: translateY(-10px);
    }
    
    .expand-indicator {
      transform: rotate(0deg);
    }
  }
  
  &[aria-expanded="true"] {
    .expand-content {
      max-height: 500px;
      opacity: 1;
      transform: translateY(0);
    }
    
    .expand-indicator {
      transform: rotate(180deg);
    }
  }
  
  .expand-content {
    transition: all 0.3s ease;
    overflow: hidden;
  }
  
  .expand-indicator {
    transition: transform 0.3s ease;
    display: inline-block;
  }
}

// Expanding/collapsing states
.expanding {
  animation: expandAnimation 0.3s ease-out forwards;
}

.collapsing {
  animation: collapseAnimation 0.3s ease-in forwards;
}

.expanded {
  .expand-content {
    max-height: none !important;
  }
}

// Hover effects
[data-hover] {
  transition: all 0.3s ease;
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s ease;
    pointer-events: none;
  }
  
  &.hover-shine::before {
    transform: translateX(100%);
  }
  
  &.hover-glow {
    box-shadow: 0 0 20px rgba(var(--primary-color-rgb), 0.5);
    transform: scale(1.02);
  }
  
  &.hover-lift {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }
  
  &.hover-pulse {
    animation: pulseAnimation 1s ease-in-out infinite;
  }
}

// Progressive disclosure
[data-progressive] {
  .disclosure-item {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.4s ease;
    
    &.revealed {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// Drag and drop
[data-draggable] {
  cursor: grab;
  transition: all 0.2s ease;
  
  &:active {
    cursor: grabbing;
    transform: scale(1.05);
    z-index: 1000;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  }
  
  &.dragging {
    opacity: 0.7;
    transform: rotate(5deg);
  }
}

[data-drop-zone] {
  transition: all 0.3s ease;
  border: 2px dashed transparent;
  
  &.drag-over {
    border-color: var(--primary-color);
    background-color: rgba(var(--primary-color-rgb), 0.1);
    transform: scale(1.02);
  }
  
  &.drop-valid {
    border-color: var(--success-color);
    background-color: rgba(var(--success-color-rgb), 0.1);
  }
  
  &.drop-invalid {
    border-color: var(--error-color);
    background-color: rgba(var(--error-color-rgb), 0.1);
  }
}

// Focus management
.focus-ring {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
  border-radius: 4px;
}

.focus-visible {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

// Touch feedback
.touch-feedback {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.5) 0%, transparent 70%);
    transform: translate(-50%, -50%);
    transition: width 0.3s ease, height 0.3s ease;
    pointer-events: none;
  }
  
  &.touch-active::after {
    width: 200px;
    height: 200px;
  }
}

// Keyboard navigation indicators
.keyboard-navigation {
  .nav-hint {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 8px 12px;
    border-radius: 4px;
    font-size: 12px;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
    z-index: 1000;
    
    &.visible {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// Animation keyframes
@keyframes expandAnimation {
  from {
    max-height: 0;
    opacity: 0;
    transform: scaleY(0);
  }
  to {
    max-height: 500px;
    opacity: 1;
    transform: scaleY(1);
  }
}

@keyframes collapseAnimation {
  from {
    max-height: 500px;
    opacity: 1;
    transform: scaleY(1);
  }
  to {
    max-height: 0;
    opacity: 0;
    transform: scaleY(0);
  }
}

@keyframes pulseAnimation {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes revealAnimation {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

// Reveal animations
.revealed {
  animation: revealAnimation 0.6s ease forwards;
}

.slide-in-left {
  animation: slideInLeft 0.6s ease forwards;
}

.slide-in-right {
  animation: slideInRight 0.6s ease forwards;
}

.slide-in-up {
  animation: slideInUp 0.6s ease forwards;
}

.slide-in-down {
  animation: slideInDown 0.6s ease forwards;
}

.fade-in {
  animation: fadeIn 0.6s ease forwards;
}

.zoom-in {
  animation: zoomIn 0.6s ease forwards;
}

// Responsive touch targets
@media (max-width: 768px) {
  [data-expandable],
  [data-hover],
  [data-draggable] {
    min-height: 44px;
    min-width: 44px;
  }
  
  .touch-feedback {
    &::after {
      width: 100px;
      height: 100px;
    }
    
    &.touch-active::after {
      width: 150px;
      height: 150px;
    }
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  [data-expandable]:focus,
  .focus-ring,
  .focus-visible {
    outline: 3px solid currentColor;
    outline-offset: 3px;
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  [data-expandable],
  [data-hover],
  [data-draggable],
  .expanding,
  .collapsing,
  .revealed,
  .slide-in-left,
  .slide-in-right,
  .slide-in-up,
  .slide-in-down,
  .fade-in,
  .zoom-in {
    animation: none !important;
    transition: none !important;
  }
  
  [data-expandable] {
    &[aria-expanded="false"] .expand-content {
      display: none;
    }
    
    &[aria-expanded="true"] .expand-content {
      display: block;
    }
  }
}

// Print styles
@media print {
  [data-expandable] .expand-content {
    max-height: none !important;
    opacity: 1 !important;
    transform: none !important;
  }
  
  .hover-glow,
  .hover-lift,
  .hover-pulse {
    transform: none !important;
    box-shadow: none !important;
    animation: none !important;
  }
}
